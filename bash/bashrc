#!/bin/bash

# Get the path to this directory (because we symlink all the files)
# Ref: https://stackoverflow.com/a/246128/1236449
# ------------------------------
SOURCE="${BASH_SOURCE[0]}"
while [ -h "$SOURCE" ]; do # resolve $SOURCE until the file is no longer a symlink
  DIR="$( cd -P "$( dirname "$SOURCE" )" >/dev/null 2>&1 && pwd )"
  SOURCE="$(readlink "$SOURCE")"
  [[ $SOURCE != /* ]] && SOURCE="$DIR/$SOURCE" # if $SOURCE was a relative symlink, we need to resolve it relative to the path where the symlink file was located
done
DIR="$( cd -P "$( dirname "$SOURCE" )" >/dev/null 2>&1 && pwd )"


# Platform detection
# ------------------------------
platform='unknown'
distribution='unkown'
unamestr=`uname`
if [[ "$unamestr" == 'Linux' ]]; then
    platform='linux'
    distribution=$(awk '/^NAME=/ { print $0 }' /etc/os-release | cut -d '=' -f 2 | tr -d '\"')
elif [[ "$unamestr" == 'Darwin' ]]; then
    platform='darwin'
    distribution=$(sw_vers -productVersion)
fi


# Global Environment Definitions
# ------------------------------
export STEAM_FRAME_FORCE_CLOSE=1    # Closes the steam frame instead of minimizing (steam is still running)
#export STEAM_RUNTIME=0              # Uses system libraries to run steam (archlinux yeah \o/)
export EDITOR='vim'
export WORKON_HOME=~/.virtualenvs
export ANDROID_HOME=$HOME/.android/sdk
export GOPATH=~/Development/Go
export GO111MODULE=on
export PATH="/usr/lib/ccache/bin/:$PATH" # include ccache's binaries before the path to your compiler
export PATH="$PATH:/opt/dart-sdk/bin"
export PATH="$PATH:~/.local/apps/flutter/bin"

if [ $platform == "darwin" ]; then
    export VIRTUALENVWRAPPER_PYTHON=/usr/local/bin/python3
fi

if [ -f /usr/local/bin/virtualenvwrapper.sh ]; then # OSX and Debian
    source /usr/local/bin/virtualenvwrapper.sh
elif [ -f /usr/bin/virtualenvwrapper.sh ]; then     # Arch Linux
    source /usr/bin/virtualenvwrapper.sh
fi

if [ -f /usr/share/nvm/init-nvm.sh ]; then
    source /usr/share/nvm/init-nvm.sh
fi

if [ -f $HOME/.travis/travis.sh ]; then
    source $HOME/.travis/travis.sh
fi

if [ $platform == "darwin" ]; then
    export LC_CTYPE=en_US.UTF-8
    export LC_ALL=en_US.UTF-8
    export LANG=en_US.UTF-8
fi

VIRTUAL_ENV_DISABLE_PROMPT=1  # don't let virtualenv show prompts by itself
export PYMACS_PYTHON=python2

export HISTCONTROL=ignoredups # don't put duplicate lines in the history
export HISTCONTROL=ignoreboth # ignore same sucessive entries.
export HISTCONTROL=erasedups  # ignore duplicate entries in history
export HISTSIZE=10000         # Increases size of history
export HISTIGNORE="&:ls:ll:la:l.:pwd:exit:clear:clr:[bf]g"
#export _JAVA_OPTIONS='-Dawt.useSystemAAFontSettings=on'
shopt -s histappend   # Append history instead of overwriting
shopt -s cdspell      # Correct minor spelling errors in cd command
shopt -s dotglob      # includes dotfiles in pathname expansion
shopt -s checkwinsize # If window size changes, redraw contents
shopt -s cmdhist      # Multiline commands are a single command in history.
shopt -s extglob      # Allows basic regexps in bash.
shopt -s checkwinsize # update the values of lines and columns.
#set ignoreeof on      # Typing EOF (CTRL+D) will not exit interactive sessions


# Additional $PATH paths
# ------------------------------
# set PATH so it includes user's private bin if it exists
if [ -d ~/.bin ]; then
    PATH=$HOME/.bin:"${PATH}"
fi

if [ -d ~/.local/bin ]; then
    PATH=$HOME/.local/bin:"${PATH}"
fi

if [ -d $HOME/.rvm/bin ]; then
    PATH=$HOME/.rvm/bin:"${PATH}"
fi

if [ -d $HOME/Development/Go/bin ]; then
    PATH=$HOME/Development/Go/bin:"${PATH}"
fi


# Completions
# ------------------------------
if [ -f /etc/bash_completion ]; then
    source /etc/bash_completion
fi

if [ -f /usr/local/git/contrib/completion ]; then
    source /usr/local/git/contrib/completion/git-completion.bash
fi

# sudo completion
complete -cf sudo
# Add tab completion for SSH hostnames based on ~/.ssh/config, ignoring wildcards
[ -e "$HOME/.ssh/config" ] && complete -o "default" -o "nospace" -W "$(grep "^Host" ~/.ssh/config | grep -v "[?*]" | cut -d " " -f2 | tr ' ' '\n')" scp sftp ssh

# osx specific
if [ $platform == "darwin" ]; then
    complete -W "NSGlobalDomain" defaults
    complete -o "nospace" -W "Contacts Calendar Dock Finder Mail Safari iTunes SystemUIServer Terminal Twitter" killall # Add `killall` tab completion for common apps
fi

# less and cat source highlighting with highlight.
# Install highlight with ${YOUR_FAVORITE_PACKAGEMANAGER} highlight
# All available themes can be retrieved with this command: highlight --list-scripts=themes
if hash highlight 2>/dev/null; then
    # Pipe Highlight to less
    export LESSOPEN="| $(which highlight) %s --out-format xterm256 --line-numbers --quiet --force --style moria"
    export LESS=" -R"
    alias less='less -m -N -g -i -J --line-numbers --underline-special'
    alias more='less'

    # Use "highlight" in place of "cat"
    #alias cat="highlight $1 --out-format xterm256 --line-numbers --quiet --force --style moria"
fi

# External config
if [[ -r ~/.dircolors ]] && type -p dircolors >/dev/null; then
  eval $(dircolors -b "$HOME/.dircolors")
fi


# Public Aliases
# ------------------------------
source "$DIR/bash_aliases"


# Private Aliases
# ------------------------------
if [ -f "$DIR/bash_alias_private" ]; then
    source "$DIR/bash_alias_private"
fi


# Functions / Helpers
# ------------------------------
source "$DIR/bash_functions"


# Prompt
# ------------------------------
source "$DIR/bash_prompt"
